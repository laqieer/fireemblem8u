#pragma once

#include "global.h"
#include "event.h"
#include "eventinfo.h"
#include "eventcall.h"
#include "eventscript.h"
#include "EAstdlib.h"
#include "worldmap.h"
#include "constants/characters.h"
#include "constants/classes.h"
#include "constants/worldmap.h"

CONST_DATA EventScr EventScrWM_Ch5_Beginning[] = {
    CHECK_EVENTID(136)
    BEQ(0x1, EVT_SLOT_C, EVT_SLOT_0)
    CALL(EventScrWM_08A3A268)
    GOTO(0x2)
LABEL(0x1)
    EVBIT_MODIFY(0x1)
    WM_SPAWNLORD(WM_MU_0, CHARACTER_EIRIKA, WM_NODE_ZahaWoods)
    WM_CENTERCAMONLORD(WM_MU_0)
    WM_FADEOUT(0)
    WM_TEXTDECORATE // WaitFade
    EVBIT_MODIFY(0x0)
    STAL(20)
    WM_CREATENEXTDESTINATION
    WM_WAITFORFX
    STAL(40)
    WM_DRAWPATH(WM_PATH_04)
    STAL(70)
    WM_MAKELORDVISIBLE(WM_MU_0)
    EVBIT_MODIFY(0x1)
    CALL(EventScr_RemoveBGIfNeeded)
LABEL(0x2)
    ENDA
};

CONST_DATA EventScr EventScrWM_08A3A268[] = {
    EVBIT_MODIFY(0x1)
    WM_SPAWNLORD(WM_MU_0, CHARACTER_EIRIKA, WM_NODE_Renvall2)
    WmEvtSetCamToNode(WM_NODE_AdlasPlains) // ENOSUPP in EAstdlib
    WM_FADEOUT(0)
    WM_TEXTDECORATE // WaitFade
    EVBIT_MODIFY(0x0)
    WM_MOVESPRITETO(WM_MU_0, 0x0004, WM_NODE_Renvall2, WM_NODE_AdlasPlains, -2, 0)
    WM_WAITFORSPRITES(WM_MU_0)
    WM_MOVESPRITETO(WM_MU_0, 0x0004, WM_NODE_AdlasPlains, WM_NODE_Serafew, -2, 0)
    WM_WAITFORSPRITES(WM_MU_0)
    WmEvtSetUnitOnNode(WM_MU_0, WM_NODE_Serafew) // ENOSUPP in EAstdlib
    WmEvtSetNextStoryNode(WM_NODE_Serafew) // ENOSUPP in EAstdlib
    SKIPWN
    ENDA
};

CONST_DATA EventScr EventScrWM_Ch5_ChapterIntro[] = {
    CHECK_EVENTID(136)
    BEQ(0x1, EVT_SLOT_C, EVT_SLOT_0)
    CALL(EventScrWM_08A3A4D0)
    GOTO(0x2)
LABEL(0x1)
    STAL(6)
    WM_MOVECAM(-1, -1, 26, 112, 60, 0)
    WM_WAITFORCAM
    CALL(EventScr_WM_FadeCommon)
    STAL(60)
    WM_TEXTSTART
    WM_SHOWDRAWNMAP(0, 0, 0x3)
    STAL(120)
    PUTSPRITE(WM_MU_2, CLASS_REVENANT, WM_FACTION_RED, WM_NODE_BorderMulan)
    PUTSPRITE(WM_MU_3, CLASS_REVENANT, WM_FACTION_RED, WM_NODE_BorderMulan)
    PUTSPRITE(WM_MU_4, CLASS_REVENANT, WM_FACTION_RED, WM_NODE_BorderMulan)
    PUTSPRITE(WM_MU_5, CLASS_REVENANT, WM_FACTION_RED, WM_NODE_BorderMulan)
    PUTSPRITE(WM_MU_6, CLASS_REVENANT, WM_FACTION_RED, WM_NODE_BorderMulan)
    WM_PUTSPRITE(WM_MU_2, 0x28, 0x5e)
    WM_PUTSPRITE(WM_MU_3, 0x4e, 0x3d)
    WM_PUTSPRITE(WM_MU_4, 0x89, 0x4e)
    WM_PUTSPRITE(WM_MU_5, 0xaa, 0x2d)
    WM_PUTSPRITE(WM_MU_6, 0xbf, 0x5b)
    WM_FADEINSPRITE(WM_MU_2, 60)
    WM_FADEINSPRITE(WM_MU_3, 60)
    WM_FADEINSPRITE(WM_MU_4, 60)
    WM_FADEINSPRITE(WM_MU_5, 60)
    WM_FADEINSPRITE(WM_MU_6, 60)
    WM_TEXT(0x08E2, 0)
    TEXTEND
    WM_WAITFORSPRITELOAD
    WM_FADEOUTSPRITE(WM_MU_2, 60)
    WM_FADEOUTSPRITE(WM_MU_3, 60)
    WM_FADEOUTSPRITE(WM_MU_4, 60)
    WM_FADEOUTSPRITE(WM_MU_5, 60)
    WM_FADEOUTSPRITE(WM_MU_6, 60)
    WM_WAITFORSPRITELOAD
    WM_REMSPRITE(WM_MU_2)
    WM_REMSPRITE(WM_MU_3)
    WM_REMSPRITE(WM_MU_4)
    WM_REMSPRITE(WM_MU_5)
    WM_REMSPRITE(WM_MU_6)
    WmEvtRemoveBigMap // WM_WAITFORFXCLEAR1
    WM_FADEOUTSPRITE(WM_MU_0, 1)
    WmEvtWaitBigMapRemove // WM_WAITFORFXCLEAR2
    WM_SHOWPORTRAIT(0, 0x0002, 0x0534, 0)
    STAL(6)
    STAL(46)
    TEXTCONT
    TEXTEND
    TEXTCONT
    TEXTEND
    PUTSPRITE(WM_MU_2, CLASS_ARMOR_KNIGHT, WM_FACTION_RED, WM_NODE_Serafew)
    WM_FADEINSPRITE(WM_MU_2, 60)
    TEXTCONT
    TEXTEND
    WM_WAITFORSPRITELOAD
    STAL(14)
    WM_FADEOUTSPRITE(WM_MU_2, 60)
    WM_MOVESPRITETO(WM_MU_0, 0x0002, WM_NODE_ZahaWoods, WM_NODE_Serafew, -4, 0)
    WM_WAITFORSPRITELOAD
    WM_WAITFORSPRITES(WM_MU_ANY)
    STAL(20)
    WM_REMOVETEXT
    STAL(2)
    STAL(20)
    FADI(16)
    WM_REMSPRITE(WM_MU_2)
LABEL(0x2)
    ENDA
};

CONST_DATA EventScr EventScrWM_08A3A4D0[] = {
    FADI(16)
    ENDA
};
